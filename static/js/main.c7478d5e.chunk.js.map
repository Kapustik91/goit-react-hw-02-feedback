{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","getBtnName","namesOfItems","Object","keys","className","s","list","map","item","onClick","button","Notification","message","text","Statistics","good","neutral","bad","total","positivePercentage","App","state","setActiveItem","setState","prevState","name","slice","toUpperCase","toLowerCase","countTotalFeedback","values","reduce","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,4ICC1C,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,QACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,WAEMC,EAAeC,OAAOC,KAAKL,GAEjC,OACE,oBAAIM,UAAWC,IAAEC,KAAjB,SACGL,EAAaM,KAAI,SAAAC,GAAI,OACpB,6BACE,yBAAQC,QAAS,kBAAMV,EAAgBS,IAAOJ,UAAWC,IAAEK,OAA3D,UACGV,EAAWQ,GACX,OAHIA,Q,oBCVF,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGR,UAAWC,IAAEQ,KAAhB,SAAuBD,I,oBCDjB,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIf,UAAWC,IAAEC,KAAjB,UACE,oBAAIF,UAAWC,IAAEG,KAAjB,SACE,uCAAUO,OAEZ,oBAAIX,UAAWC,IAAEG,KAAjB,SACE,0CAAaQ,OAEf,oBAAIZ,UAAWC,IAAEG,KAAjB,SACE,sCAASS,OAEX,oBAAIb,UAAWC,IAAEG,KAAjB,SACE,wCAAWU,OAEb,oBAAId,UAAWC,IAAEG,KAAjB,SACE,oDAAuBW,EAAvB,Y,ICmCOC,E,4MArDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,cAAgB,SAAAd,GACd,EAAKe,UAAS,SAAAC,GAAS,sBACpBhB,EAAOgB,EAAUhB,GAAQ,O,EAI9BR,WAAa,SAAAyB,GACX,MAAM,GAAN,OAAUA,EAAKC,MAAM,EAAG,GAAGC,eAA3B,OAA2CF,EAAKC,MAAM,GAAGE,gB,EAG3DC,mBAAqB,WACnB,OAAO3B,OAAO4B,OAAO,EAAKT,OAAOU,QAAO,SAACb,EAAOV,GAAR,OAAiBU,EAAQV,IAAM,I,EAGzEwB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKb,MAAMN,KAAc,EAAKc,uB,uDAIjD,OACE,qCACE,cAACnC,EAAD,CAASC,MAAM,2BAAf,SACE,cAACE,EAAD,CACEC,QAASqC,KAAKd,MACdtB,gBAAiBoC,KAAKb,cACtBtB,WAAYmC,KAAKnC,eAIrB,cAACN,EAAD,CAASC,MAAM,eAAf,SACiC,IAA9BwC,KAAKN,qBACJ,cAAClB,EAAD,CAAcC,QAAQ,sBAEtB,cAACE,EAAD,CACEC,KAAMoB,KAAKd,MAAMN,KACjBC,QAASmB,KAAKd,MAAML,QACpBC,IAAKkB,KAAKd,MAAMJ,IAChBC,MAAOiB,KAAKN,qBACZV,mBAAoBgB,KAAKH,6C,GA7CrBI,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BjD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,kBCAhED,EAAOC,QAAU,CAAC,KAAO,8B","file":"static/js/main.c7478d5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"item\":\"Statistics_item__1vE2T\"};","import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({\n  options,\n  onLeaveFeedback,\n  getBtnName,\n}) {\n  const namesOfItems = Object.keys(options);\n\n  return (\n    <ul className={s.list}>\n      {namesOfItems.map(item => (\n        <li key={item}>\n          <button onClick={() => onLeaveFeedback(item)} className={s.button}>\n            {getBtnName(item)}\n            {''}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n  getBtnName: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.text}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>\n        <p>Good: {good}</p>\n      </li>\n      <li className={s.item}>\n        <p>Neutral: {neutral}</p>\n      </li>\n      <li className={s.item}>\n        <p>Bad: {bad}</p>\n      </li>\n      <li className={s.item}>\n        <p>Total: {total}</p>\n      </li>\n      <li className={s.item}>\n        <p>Positive feedback: {positivePercentage}%</p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\nimport Statistics from './components/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  setActiveItem = item => {\n    this.setState(prevState => ({\n      [item]: prevState[item] + 1,\n    }));\n  };\n\n  getBtnName = name => {\n    return `${name.slice(0, 1).toUpperCase()}${name.slice(1).toLowerCase()}`;\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((total, item) => total + item, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback :)\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.setActiveItem}\n            getBtnName={this.getBtnName}\n          />\n        </Section>\n\n        <Section title=\"Statistics: \">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2lRUp\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3WvWm\"};"],"sourceRoot":""}